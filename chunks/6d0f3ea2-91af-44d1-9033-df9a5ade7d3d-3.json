{
  "id": "6d0f3ea2-91af-44d1-9033-df9a5ade7d3d",
  "chunk_ix": 3,
  "created_at": "2025-08-11T19:22:13",
  "source": "web",
  "tags": [
    "historic",
    "memory",
    "system"
  ],
  "content": " except Exception as e:\r\n        write_log(f\"ERROR: check_auth - Error checking auth: {e}\")\r\n        return False\r\n\r\ndef check_read_auth():\r\n    \"\"\"\r\n    Read-only auth for GET endpoints via query-string key=.... \r\n    Use when clients cannot send headers. Does NOT allow writes.\r\n    \"\"\"\r\n    try:\r\n        write_log(\"DEBUG: check_read_auth - Checking read authorization\")\r\n        \r\n        # Primary: header bearer still acceptable\r\n        auth_header = request.headers.get('Authorization')\r\n        if auth_header and auth_header.startswith('Bearer '):\r\n            token = auth_header.split(' ')[1]\r\n            if token == API_TOKEN:\r\n                write_log(\"DEBUG: check_read_auth - Bearer token authorization successful\")\r\n                return True\r\n        \r\n        # Fallback: query-string key for read-only GET\r\n        if request.method == 'GET':\r\n            query_key = request.args.get('key', '')\r\n            if query_key and READONLY_QUERY_KEY and query_key == READONLY_QUERY_KEY:\r\n                write_log(\"DEBUG: check_read_auth - Query key authorization successful\")\r\n                return True\r\n        \r\n        write_log(\"ERROR: check_read_auth - No valid authorization found\")\r\n        return False\r\n        \r\n    except Exception as e:\r\n        write_log(f\"ERROR: check_read_auth - Error checking auth: {e}\")\r\n        return False\r\n\r\ndef generate_chat_id():\r\n    \"\"\"Generate unique ID for chat\"\"\"\r\n    try:\r\n        import uuid\r\n        chat_id = str(uuid.uuid4())\r\n        write_log(f\"DEBUG: generate_chat_id - Generated ID: {chat_id}\")\r\n        return chat_id\r\n    except Exception as e:\r\n        write_log(f\"ERROR: generate_chat_id - Error generating ID: {e}\")\r\n        return None\r\n\r\n@app.route('/health', methods=['GET'])\r\ndef health_check():\r\n    \"\"\"Simple health check endpoint\"\"\"\r\n    conn = None\r\n    cursor = None\r\n    \r\n    try:\r\n        write_log(\"DEBUG: health_check - Starting health check\")\r\n        \r\n        # Test database connection\r\n        conn "
}