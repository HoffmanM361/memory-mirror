{
  "id": "e8a72f5e-ea4b-4c9c-a182-977f5a6b184c",
  "chunk_ix": 3,
  "created_at": "2025-08-10T15:50:12",
  "source": "web",
  "tags": [
    "breakthrough",
    "historic",
    "memory",
    "system"
  ],
  "content": "()\r\ntags = set(t for t in PUBLIC_TAGS if t and t.lower() in lower)\r\nif not public and not tags:\r\ncontinue\r\nrc = redact(content)\r\nchunk_urls = []\r\nfor ix, part in chunk_text(rc):\r\nfn = f&quot;{CHUNK_DIR}/{chat_id}-{ix}.json&quot;\r\nsave_json(fn, {\r\n&quot;id&quot;: chat_id, &quot;chunk_ix&quot;: ix,\r\n&quot;created_at&quot;: created_at.isoformat(),\r\n&quot;source&quot;: source, &quot;tags&quot;: sorted(list(tags)),\r\n&quot;content&quot;: part\r\n})\r\nchunk_urls.append(f&quot;chunks/{chat_id}-{ix}.json&quot;)\r\nitem = {\r\n&quot;id&quot;: chat_id,\r\n&quot;created_at&quot;: created_at.isoformat(),\r\n&quot;source&quot;: source,\r\n&quot;title&quot;: (summary or f&quot;{source} note&quot;)[:80],\r\n&quot;tags&quot;: sorted(list(tags)),\r\n&quot;summary&quot;: summary or &quot;&quot;,\r\n&quot;chunk_urls&quot;: chunk_urls,\r\n&quot;preview_240&quot;: rc[:240] + (&quot;â€¦&quot; if len(rc)&gt;240 else &quot;&quot;)\r\n}\r\n\r\nfor t in tags:\r\nitems_by_tag.setdefault(t, []).append(item)\r\nym = created_at.strftime(&quot;%Y-%m&quot;)\r\nitems_by_month.setdefault(ym, []).append(item)\r\nexported += 1\r\nnow_iso = datetime.datetime.utcnow().isoformat() + &quot;Z&quot;\r\nfor t, items in items_by_tag.items():\r\nwrite_shard(now_iso, f&quot;{SHARD_TAG_DIR}/{t}.json&quot;, items)\r\nfor ym, items in items_by_month.items():\r\nwrite_shard(now_iso, f&quot;{SHARD_DATE_DIR}/{ym}.json&quot;, items)\r\ntokens = {t: [f&quot;catalog/shards/by_tag/{t}.json&quot;] for t in items_by_tag.keys()}\r\nsearch_map = {&quot;version&quot;:&quot;1&quot;,&quot;tokens&quot;: tokens}\r\nsave_json(f&quot;{CAT_DIR}/search_map.json&quot;, search_map) # stable alias\r\nnonce = token_urlsafe(12)\r\nsave_json(f&quot;{CAT_DIR}/search_map_{nonce}.json&quot;, search_map) # rotating copy\r\nsave_json(f&quot;{META_DIR}/latest_build.json&quot;, {&quot;generated_at&quot;: now_iso, &quot;exported&quot;:\r\nexported})\r\ncounts = {&quot;by_tag&quot;:{k:len(v) for k,v in items_by_tag.items()}, &quot;by_month&quot;:{k:len(v) for\r\nk,v in items_by_month.items()}}\r\nsave_json(f&quot;{"
}