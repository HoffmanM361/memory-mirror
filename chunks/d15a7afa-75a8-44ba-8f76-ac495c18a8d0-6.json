{
  "id": "d15a7afa-75a8-44ba-8f76-ac495c18a8d0",
  "chunk_ix": 6,
  "created_at": "2025-08-10T11:15:41",
  "source": "web",
  "tags": [
    "memory",
    "system"
  ],
  "content": "error')\r\n        \r\n        return redirect(url_for('conversations.view_conversations'))\r\n        \r\n    except Exception as e:\r\n        write_log(f\"ERROR: delete_conversation - Error: {e}\")\r\n        flash('Error deleting conversation', 'error')\r\n        return redirect(url_for('conversations.view_conversations'))\r\n        \r\n    finally:\r\n        if cursor:\r\n            cursor.close()\r\n        if conn:\r\n            conn.close()\r\n\r\n@conversation_bp.route('/export/<chat_id>')\r\ndef export_conversation(chat_id):\r\n    \"\"\"Export conversation as JSON\"\"\"\r\n    conn = None\r\n    cursor = None\r\n    \r\n    try:\r\n        conn = get_db_connection()\r\n        if not conn:\r\n            return jsonify({'error': 'Database connection failed'}), 500\r\n        \r\n        cursor = conn.cursor(dictionary=True)\r\n        cursor.execute('''\r\n            SELECT id, created_at, source, content, summary, content_hash\r\n            FROM chats WHERE id = %s\r\n        ''', (chat_id,))\r\n        \r\n        conversation = cursor.fetchone()\r\n        if not conversation:\r\n            return jsonify({'error': 'Conversation not found'}), 404\r\n        \r\n        # Convert datetime to string for JSON serialization\r\n        conversation['created_at'] = conversation['created_at'].isoformat()\r\n        \r\n        return jsonify(conversation)\r\n        \r\n    except Exception as e:\r\n        write_log(f\"ERROR: export_conversation - Error: {e}\")\r\n        return jsonify({'error': 'Export failed'}), 500\r\n        \r\n    finally:\r\n        if cursor:\r\n            cursor.close()\r\n        if conn:\r\n            conn.close()"
}