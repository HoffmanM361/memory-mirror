{
  "id": "e8a72f5e-ea4b-4c9c-a182-977f5a6b184c",
  "chunk_ix": 2,
  "created_at": "2025-08-10T15:50:12",
  "source": "web",
  "tags": [
    "breakthrough",
    "historic",
    "memory",
    "system"
  ],
  "content": "nv(&quot;MEM_DB_NAME&quot;,&quot;memory_system&quot;),\r\nuser = os.getenv(&quot;MEM_DB_USER&quot;,&quot;memory_user&quot;),\r\npassword = os.getenv(&quot;MEM_DB_PASS&quot;,&quot;memory_pass_2025&quot;)\r\n)\r\n# ------------------- Helpers -------------------\r\n\r\ndef db():\r\nreturn mysql.connector.connect(**DB)\r\ndef ensure_dir(p):\r\npathlib.Path(p).parent.mkdir(parents=True, exist_ok=True)\r\ndef save_json(path, obj):\r\nensure_dir(path)\r\nwith open(path, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f:\r\njson.dump(obj, f, ensure_ascii=False, indent=2) # pretty (multi-line)\r\ndef chunk_text(text, size=CHUNK_SIZE):\r\nfor i in range(0, len(text), size):\r\nyield i//size, text[i:i+size]\r\nEMAIL_RE = re.compile(r&quot;[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+&quot;)\r\ndef redact(text: str) -&gt; str:\r\ntext = EMAIL_RE.sub(&quot;&lt;redacted.email&gt;&quot;, text)\r\nreturn text\r\ndef load_rows(limit=5000):\r\nq = (\r\n&quot;SELECT id, created_at, source, content, summary, IFNULL(public,0) as public &quot;\r\n&quot;FROM chats ORDER BY created_at DESC LIMIT %s&quot;\r\n)\r\ncn = db(); cur = cn.cursor()\r\ncur.execute(q, (limit,))\r\nrows = cur.fetchall()\r\ncur.close(); cn.close()\r\nreturn rows\r\ndef write_shard(now_iso: str, path: str, items: list):\r\nif len(items) &lt;= MAX_ITEMS_PER_SHARD:\r\nsave_json(path, {&quot;version&quot;:&quot;1&quot;,&quot;generated_at&quot;:now_iso,&quot;items&quot;:items})\r\nreturn [path]\r\nbase, ext = path.rsplit(&quot;.&quot;, 1)\r\nout = []\r\nfor ix in range(0, len(items), MAX_ITEMS_PER_SHARD):\r\npart = items[ix:ix+MAX_ITEMS_PER_SHARD]\r\n\r\np = f&quot;{base}.{ix//MAX_ITEMS_PER_SHARD}.{ext}&quot;\r\nsave_json(p, {&quot;version&quot;:&quot;1&quot;,&quot;generated_at&quot;:now_iso,&quot;items&quot;:part})\r\nout.append(p)\r\nreturn out\r\n# ------------------- Main -------------------\r\ndef main():\r\nrows = load_rows()\r\nitems_by_tag, items_by_month = {}, {}\r\nexported = 0\r\nfor (chat_id, created_at, source, content, summary, public) in rows:\r\nlower = (content[:2000] + &quot; &quot; + (summary or &quot;&quot;)).lower"
}